{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Desktop/client/src/screens/ProductScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductDetails } from '../actions/productActions';\n\nconst ProductScreen = ({\n  match,\n  history\n}) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    product\n  } = useSelector(state => state.productDetails);\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [match, dispatch]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-light my-3\",\n    to: \"/\"\n  }, \"Go Back\"), loading ? /*#__PURE__*/React.createElement(Loader, null) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error) : /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    md: 6\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: product === null || product === void 0 ? void 0 : product.image,\n    alt: product === null || product === void 0 ? void 0 : product.name,\n    fluid: true\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\"\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(\"h3\", null, product === null || product === void 0 ? void 0 : product.name)), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Rating, {\n    value: (product === null || product === void 0 ? void 0 : product.rating) || 0,\n    text: `${product === null || product === void 0 ? void 0 : product.numReviews} reviews`,\n    color: \"#5aa962\"\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, null, \"Description: \", product === null || product === void 0 ? void 0 : product.description))), /*#__PURE__*/React.createElement(Col, {\n    md: 3\n  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\"\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Price:\"), /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(\"strong\", null, \"$ \", product === null || product === void 0 ? void 0 : product.price)))), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Status:\"), /*#__PURE__*/React.createElement(Col, null, product && product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'))), product.countInStock > 0 && /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Qty\"), /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: qty,\n    onChange: e => {\n      setQty(e.target.value);\n    }\n  }, [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1\n  }, x + 1)))))), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addToCartHandler,\n    className: \"btn-block\",\n    type: \"button\",\n    disabled: (product === null || product === void 0 ? void 0 : product.countInStock) === 0\n  }, \"Add to Cart\")))))));\n};\n\nexport default ProductScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Desktop/client/src/screens/ProductScreen.tsx"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","Rating","Message","Loader","listProductDetails","ProductScreen","match","history","qty","setQty","dispatch","loading","error","product","state","productDetails","params","id","addToCartHandler","push","image","name","rating","numReviews","description","price","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductDetails } from '../actions/productActions';\n\ninterface Props {\n  match: any;\n  history: any;\n}\n\nconst ProductScreen: FunctionComponent<Props> = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const { loading, error, product } = useSelector((state: any) => state.productDetails);\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [match, dispatch]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product?.image} alt={product?.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product?.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating value={product?.rating || 0} text={`${product?.numReviews} reviews`} color=\"#5aa962\" />\n              </ListGroup.Item>\n\n              <ListGroup.Item>Description: {product?.description}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>$ {product?.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>{product && product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as=\"select\"\n                          value={qty}\n                          onChange={(e: React.ChangeEvent<any>) => {\n                            setQty(e.target.value);\n                          }}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <Button onClick={addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product?.countInStock === 0}>\n                    Add to Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}