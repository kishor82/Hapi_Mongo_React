{"ast":null,"code":"import _slicedToArray from\"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Link,useHistory,useParams}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';var UserEditScreen=function UserEditScreen(){var history=useHistory();var _useParams=useParams(),userId=_useParams.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAdmin=_useState4[0],setIsAdmin=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.userDetails;}),loading=_useSelector.loading,error=_useSelector.error,user=_useSelector.user;var _useSelector2=useSelector(function(state){return state.userUpdate;}),loadingUpdate=_useSelector2.loading,errorUpdate=_useSelector2.error,successUpdate=_useSelector2.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[user,userId,dispatch,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser(userId,{name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Link,{to:\"/admin/userlist\",className:\"btn btn-light my-3\"},\"Go Back\"),/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Edit User\"),loadingUpdate&&/*#__PURE__*/React.createElement(Loader,null),errorUpdate&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},errorUpdate),loading?/*#__PURE__*/React.createElement(Loader,null):error?/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},error):/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"isadmin\"},/*#__PURE__*/React.createElement(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Update\"))));};export default UserEditScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/UserEditScreen.tsx"],"names":["React","useEffect","useState","Link","useHistory","useParams","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","history","userId","id","email","setEmail","isAdmin","setIsAdmin","name","setName","dispatch","state","userDetails","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA8D,OAA9D,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,SAA3B,KAA4C,kBAA5C,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,cAAT,CAAyBC,UAAzB,KAA2C,wBAA3C,CACA,OAASC,iBAAT,KAAkC,4BAAlC,CAIA,GAAMC,CAAAA,cAAwC,CAAG,QAA3CA,CAAAA,cAA2C,EAAM,CACrD,GAAMC,CAAAA,OAAO,CAAGb,UAAU,EAA1B,CADqD,eAE9BC,SAAS,EAFqB,CAEzCa,MAFyC,YAE7CC,EAF6C,eAG3BjB,QAAQ,CAAC,EAAD,CAHmB,wCAG9CkB,KAH8C,eAGvCC,QAHuC,8BAIvBnB,QAAQ,CAAC,KAAD,CAJe,yCAI9CoB,OAJ8C,eAIrCC,UAJqC,8BAK7BrB,QAAQ,CAAC,EAAD,CALqB,yCAK9CsB,IAL8C,eAKxCC,OALwC,eAOrD,GAAMC,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CAPqD,iBASpBC,WAAW,CAAC,SAACkB,KAAD,QAAgBA,CAAAA,KAAK,CAACC,WAAtB,EAAD,CATS,CAS7CC,OAT6C,cAS7CA,OAT6C,CASpCC,KAToC,cASpCA,KAToC,CAS7BC,IAT6B,cAS7BA,IAT6B,mBAU0BtB,WAAW,CACxF,SAACkB,KAAD,QAAgBA,CAAAA,KAAK,CAACK,UAAtB,EADwF,CAVrC,CAUpCC,aAVoC,eAU7CJ,OAV6C,CAUdK,WAVc,eAUrBJ,KAVqB,CAUQK,aAVR,eAUDC,OAVC,CAcrDnC,SAAS,CAAC,UAAM,CACd,GAAIkC,aAAJ,CAAmB,CACjBT,QAAQ,CAAC,CAAEW,IAAI,CAAEtB,iBAAR,CAAD,CAAR,CACAE,OAAO,CAACqB,IAAR,CAAa,iBAAb,EACD,CAHD,IAGO,CACL,GAAI,CAACP,IAAI,CAACP,IAAN,EAAcO,IAAI,CAACQ,GAAL,GAAarB,MAA/B,CAAuC,CACrCQ,QAAQ,CAACb,cAAc,CAACK,MAAD,CAAf,CAAR,CACD,CAFD,IAEO,CACLO,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP,CACAH,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR,CACAG,UAAU,CAACQ,IAAI,CAACT,OAAN,CAAV,CACD,CACF,CACF,CAbQ,CAaN,CAACS,IAAD,CAAOb,MAAP,CAAeQ,QAAf,CAAyBS,aAAzB,CAAwClB,OAAxC,CAbM,CAAT,CAeA,GAAMuB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAA6B,CACjDA,CAAC,CAACC,cAAF,GACAhB,QAAQ,CAACZ,UAAU,CAACI,MAAD,CAAS,CAAEM,IAAI,CAAJA,IAAF,CAAQJ,KAAK,CAALA,KAAR,CAAeE,OAAO,CAAPA,OAAf,CAAT,CAAX,CAAR,CACD,CAHD,CAKA,mBACE,qDACE,oBAAC,IAAD,EAAM,EAAE,CAAC,iBAAT,CAA2B,SAAS,CAAC,oBAArC,YADF,cAIE,oBAAC,aAAD,mBACE,0CADF,CAEGW,aAAa,eAAI,oBAAC,MAAD,MAFpB,CAGGC,WAAW,eAAI,oBAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,EAA2BA,WAA3B,CAHlB,CAIGL,OAAO,cACN,oBAAC,MAAD,MADM,CAEJC,KAAK,cACP,oBAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,EAA2BA,KAA3B,CADO,cAGP,oBAAC,IAAD,EAAM,QAAQ,CAAEU,aAAhB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,aADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,YAFd,CAGE,KAAK,CAAEhB,IAHT,CAIE,QAAQ,CAAE,kBAACiB,CAAD,QAA+BhB,CAAAA,OAAO,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtC,EAJZ,EAFF,CADF,cAUE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,sBADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,aAFd,CAGE,KAAK,CAAExB,KAHT,CAIE,QAAQ,CAAE,kBAACqB,CAAD,QAA+BpB,CAAAA,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvC,EAJZ,EAFF,CAVF,cAmBE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAC,UAFR,CAGE,OAAO,CAAEtB,OAHX,CAIE,QAAQ,CAAE,kBAACmB,CAAD,QAA+BlB,CAAAA,UAAU,CAACkB,CAAC,CAACE,MAAF,CAASE,OAAV,CAAzC,EAJZ,EADF,CAnBF,cA4BE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,WA5BF,CATJ,CAJF,CADF,CAkDD,CApFD,CAsFA,cAAe7B,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\ninterface Props {}\n\nconst UserEditScreen: FunctionComponent<Props> = () => {\n  const history = useHistory();\n  const { id: userId } = useParams<any>();\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [name, setName] = useState('');\n\n  const dispatch = useDispatch();\n\n  const { loading, error, user } = useSelector((state: any) => state.userDetails);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = useSelector(\n    (state: any) => state.userUpdate\n  );\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, dispatch, successUpdate, history]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n    dispatch(updateUser(userId, { name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e: React.ChangeEvent<any>) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e: React.ChangeEvent<any>) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n"]},"metadata":{},"sourceType":"module"}