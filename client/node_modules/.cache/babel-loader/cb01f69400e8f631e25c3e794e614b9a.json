{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productListReducer,productDetailsReducer}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer}from'./reducers/userRedusers';import{orderCreateReducer,orderDetailsReducer}from'./reducers/orderReducers';var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer,userDetails:userDetailsReducer,userUpdateProfile:userUpdateProfileReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer});var cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')||'{}'):[];var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')||'{}'):null;var shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')||'{}'):{};var intitialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,intitialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","intitialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA0E,OAA1E,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,kBAAT,CAA6BC,qBAA7B,KAA0D,4BAA1D,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OACEC,gBADF,CAEEC,mBAFF,CAGEC,kBAHF,CAIEC,wBAJF,KAKO,yBALP,CAMA,OAASC,kBAAT,CAA6BC,mBAA7B,KAAuD,0BAAvD,CACA,GAAMC,CAAAA,OAAO,CAAGb,eAAe,CAAC,CAC9Bc,WAAW,CAAEV,kBADiB,CAE9BW,cAAc,CAAEV,qBAFc,CAG9BW,IAAI,CAAEV,WAHwB,CAI9BW,SAAS,CAAEV,gBAJmB,CAK9BW,YAAY,CAAEV,mBALgB,CAM9BW,WAAW,CAAEV,kBANiB,CAO9BW,iBAAiB,CAAEV,wBAPW,CAQ9BW,WAAW,CAAEV,kBARiB,CAS9BW,YAAY,CAAEV,mBATgB,CAAD,CAA/B,CAYA,GAAMW,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,GAAqC,IAAhD,CADyB,CAEzB,EAFJ,CAGA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,GAAoC,IAA/C,CADwB,CAExB,IAFJ,CAIA,GAAMI,CAAAA,0BAA0B,CAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,GAA2C,IAAtD,CAD+B,CAE/B,EAFJ,CAGA,GAAMK,CAAAA,aAAkB,CAAG,CACzBd,IAAI,CAAE,CACJe,SAAS,CAAER,oBADP,CAEJS,eAAe,CAAEH,0BAFb,CADmB,CAKzBZ,SAAS,CAAE,CAAEgB,QAAQ,CAAEL,mBAAZ,CALc,CAA3B,CAQA,GAAMM,CAAAA,UAAwB,CAAG,CAAChC,KAAD,CAAjC,CAEA,GAAMiC,CAAAA,KAAK,CAAGpC,WAAW,CAACc,OAAD,CAAUiB,aAAV,CAAyB3B,mBAAmB,CAACF,eAAe,MAAf,QAAmBiC,UAAnB,CAAD,CAA5C,CAAzB,CAEA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n} from './reducers/userRedusers';\nimport { orderCreateReducer ,orderDetailsReducer} from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems') || '{}')\n  : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo') || '{}')\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress') || '{}')\n  : {};\nconst intitialState: any = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware: Middleware[] = [thunk];\n\nconst store = createStore(reducer, intitialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}