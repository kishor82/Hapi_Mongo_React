{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProductListScreen.tsx\";\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProducts, deleteProduct } from '../actions/productActions';\n\nconst ProductListScreen = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.productList);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = useSelector(state => state.productDelete);\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listProducts());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  const deleteHandler = id => {\n    swal({\n      title: 'Are you sure?',\n      text: 'Once deleted, you will not be able to recover this product!',\n      icon: 'warning',\n      buttons: [true, true],\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        dispatch(deleteProduct(id));\n        swal('Product has been deleted!', {\n          icon: 'success'\n        });\n      }\n    });\n  };\n\n  const createProductHandler = product => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center\"\n  }, /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Products\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"my-3\",\n    onClick: createProductHandler\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\"\n  }), \" Create Product\"))), loading ? /*#__PURE__*/React.createElement(Loader, null) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"ID\"), /*#__PURE__*/React.createElement(\"th\", null, \"NAME\"), /*#__PURE__*/React.createElement(\"th\", null, \"PRICE\"), /*#__PURE__*/React.createElement(\"th\", null, \"CATEGORY\"), /*#__PURE__*/React.createElement(\"th\", null, \"BRAND\"))), /*#__PURE__*/React.createElement(\"tbody\", null, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product._id\n  }, /*#__PURE__*/React.createElement(\"td\", null, product._id), /*#__PURE__*/React.createElement(\"td\", null, product.name), /*#__PURE__*/React.createElement(\"td\", null, \"$\", product.price), /*#__PURE__*/React.createElement(\"td\", null, product.category), /*#__PURE__*/React.createElement(\"td\", null, product.brand), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/admin/product/${product._id}/edit`\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"light\",\n    className: \"btn-sm\"\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\"\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    className: \"btn-sm\",\n    onClick: () => deleteHandler(product._id)\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash\"\n  }))))))));\n};\n\nexport default ProductListScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProductListScreen.tsx"],"names":["React","useEffect","LinkContainer","Table","Button","Col","Row","useDispatch","useSelector","useHistory","swal","Message","Loader","listProducts","deleteProduct","ProductListScreen","dispatch","history","loading","error","products","state","productList","loadingDelete","errorDelete","success","successDelete","productDelete","userInfo","userLogin","isAdmin","push","deleteHandler","id","title","text","icon","buttons","dangerMode","then","willDelete","createProductHandler","product","map","_id","name","price","category","brand"],"mappings":"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","sourcesContent":["import React, { useEffect, FunctionComponent } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProducts, deleteProduct } from '../actions/productActions';\n\ninterface Props {}\n\nconst ProductListScreen: FunctionComponent<Props> = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, error, products } = useSelector((state: any) => state.productList);\n\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = useSelector(\n    (state: any) => state.productDelete\n  );\n\n  const { userInfo } = useSelector((state: any) => state.userLogin);\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listProducts());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  const deleteHandler = (id: string) => {\n    swal({\n      title: 'Are you sure?',\n      text: 'Once deleted, you will not be able to recover this product!',\n      icon: 'warning',\n      buttons: [true, true],\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        dispatch(deleteProduct(id));\n        swal('Product has been deleted!', {\n          icon: 'success',\n        });\n      }\n    });\n  };\n\n  const createProductHandler = (product: any) => {};\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>BRAND</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product: any) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>${product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n"]},"metadata":{},"sourceType":"module"}