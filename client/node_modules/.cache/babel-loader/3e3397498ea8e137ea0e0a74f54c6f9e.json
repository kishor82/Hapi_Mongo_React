{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userRedusers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems') || '{}') : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo') || '{}') : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress') || '{}') : {};\nconst intitialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intitialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productDelete","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","intitialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA0E,OAA1E;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,oBAApD,QAAgF,4BAAhF;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AASA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,EAAmEC,kBAAnE,QAA6F,0BAA7F;AACA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC9BoB,EAAAA,WAAW,EAAEhB,kBADiB;AAE9BiB,EAAAA,cAAc,EAAEhB,qBAFc;AAG9BiB,EAAAA,aAAa,EAAEhB,oBAHe;AAI9BiB,EAAAA,IAAI,EAAEhB,WAJwB;AAK9BiB,EAAAA,SAAS,EAAEhB,gBALmB;AAM9BiB,EAAAA,YAAY,EAAEhB,mBANgB;AAO9BiB,EAAAA,WAAW,EAAEhB,kBAPiB;AAQ9BiB,EAAAA,iBAAiB,EAAEhB,wBARW;AAS9BiB,EAAAA,QAAQ,EAAEhB,eAToB;AAU9BiB,EAAAA,UAAU,EAAEhB,iBAVkB;AAW9BiB,EAAAA,UAAU,EAAEhB,iBAXkB;AAY9BiB,EAAAA,WAAW,EAAEhB,kBAZiB;AAa9BiB,EAAAA,YAAY,EAAEhB,mBAbgB;AAc9BiB,EAAAA,QAAQ,EAAEhB,eAdoB;AAe9BiB,EAAAA,WAAW,EAAEhB;AAfiB,CAAD,CAA/B;AAkBA,MAAMiB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,IAAhD,CADyB,GAEzB,EAFJ;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,IAA/C,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,KAA2C,IAAtD,CAD+B,GAE/B,EAFJ;AAGA,MAAMK,aAAkB,GAAG;AACzBnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADmB;AAKzBjB,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEL;AAAZ;AALc,CAA3B;AAQA,MAAMM,UAAwB,GAAG,CAAC5C,KAAD,CAAjC;AAEA,MAAM6C,KAAK,GAAGhD,WAAW,CAACoB,OAAD,EAAUuB,aAAV,EAAyBvC,mBAAmB,CAACF,eAAe,CAAC,GAAG6C,UAAJ,CAAhB,CAA5C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userRedusers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems') || '{}')\n  : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo') || '{}')\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress') || '{}')\n  : {};\nconst intitialState: any = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware: Middleware[] = [thunk];\n\nconst store = createStore(reducer, intitialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}