{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStore = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems') || '{}') : [];\nconst intitialState = {\n  cart: {\n    cartItems: ['hello']\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intitialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStore","localStorage","getItem","JSON","parse","intitialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA0E,OAA1E;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,WAAW,EAAEJ,kBADiB;AAE9BK,EAAAA,cAAc,EAAEJ,qBAFc;AAG9BK,EAAAA,IAAI,EAAEJ;AAHwB,CAAD,CAA/B;AAMA,MAAMK,kBAAkB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,IAAhD,CAApC,GAA4F,EAAvH;AACA,MAAMG,aAAkB,GAAG;AACzBN,EAAAA,IAAI,EAAE;AACJO,IAAAA,SAAS,EAAE,CAAC,OAAD;AADP;AADmB,CAA3B;AAMA,MAAMC,UAAwB,GAAG,CAAChB,KAAD,CAAjC;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAAUS,aAAV,EAAyBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAA5C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n});\n\nconst cartItemsFromStore = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems') || '{}') : [];\nconst intitialState: any = {\n  cart: {\n    cartItems: ['hello'],\n  },\n};\n\nconst middleware: Middleware[] = [thunk];\n\nconst store = createStore(reducer, intitialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}