{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/CartScreen.tsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  const productId = match.params.id;\n  const qty = location === null || location === void 0 ? void 0 : location.search.split('=')[1];\n  const dispatch = useDispatch();\n  const {\n    cartItems\n  } = useSelector(state => state.cart);\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty || 1));\n    }\n  }, [dispatch, productId, qty]);\n  console.log(qty);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Shopping Cart\")), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Shopping Cart\")), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Shopping Cart\")));\n};\n\nexport default CartScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/CartScreen.tsx"],"names":["React","useEffect","useDispatch","useSelector","Row","Col","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","split","dispatch","cartItems","state","cart","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,SAAnC,QAAoD,OAApD;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,GAAd,QAA+D,iBAA/D;AAEA,SAASC,SAAT,QAA0B,wBAA1B;;AAOA,MAAMC,UAAoC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAC7E,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AAEA,QAAMC,GAAG,GAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEM,MAAV,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAZ;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAgBf,WAAW,CAAEgB,KAAD,IAAgBA,KAAK,CAACC,IAAvB,CAAjC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACbM,MAAAA,QAAQ,CAACX,SAAS,CAACK,SAAD,EAAYG,GAAG,IAAI,CAAnB,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACG,QAAD,EAAWN,SAAX,EAAsBG,GAAtB,CAJM,CAAT;AAMAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AAEA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CAJF,eAOE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CAPF,CADF;AAcD,CA/BD;;AAiCA,eAAeP,UAAf","sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\ninterface Props {\n  match: any;\n  location: any;\n  history: any;\n}\n\nconst CartScreen: FunctionComponent<Props> = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  const qty = location?.search.split('=')[1];\n\n  const dispatch = useDispatch();\n\n  const { cartItems } = useSelector((state: any) => state.cart);\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty || 1));\n    }\n  }, [dispatch, productId, qty]);\n\n  console.log(qty);\n\n  return (\n    <Row>\n      <Col md={8}>\n      <h1>Shopping Cart</h1>\n      </Col>\n      <Col md={2}>\n      <h1>Shopping Cart</h1>\n      </Col>\n      <Col md={2}>\n      <h1>Shopping Cart</h1>\n      </Col>\n\n    </Row>\n  );\n};\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}