{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProductEditScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = () => {\n  const history = useHistory();\n  const {\n    id: productId\n  } = useParams();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    product\n  } = useSelector(state => state.productDetails);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = useSelector(state => state.productUpdate);\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, productId, dispatch, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct(productId, {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (err) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/productlist\",\n    className: \"btn btn-light my-3\"\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Edit Product\"), loadingUpdate && /*#__PURE__*/React.createElement(Loader, null), errorUpdate && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(Loader, null) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"price\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Price\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter price\",\n    value: price,\n    onChange: e => setPrice(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"image\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Image url\",\n    value: image ? image : '/images/sample.png',\n    onChange: e => setImage(e.target.value)\n  }), /*#__PURE__*/React.createElement(Form.File, {\n    id: \"image-file\",\n    label: \"Choose File\",\n    custom: true,\n    onChange: uploadFileHandler\n  }), uploading && /*#__PURE__*/React.createElement(Loader, null)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"brand\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Brand\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter brand\",\n    value: brand,\n    onChange: e => setBrand(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"countInStock\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Count In Stock\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter countInStock\",\n    value: countInStock,\n    onChange: e => setCountInStock(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"category\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Category\",\n    value: category,\n    onChange: e => setCategory(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter description\",\n    value: description,\n    onChange: e => setDescription(e.target.value)\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\"\n  }, \"Update\"))));\n};\n\nexport default ProductEditScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProductEditScreen.tsx"],"names":["React","useEffect","useState","axios","Link","useHistory","useParams","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","history","id","productId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","loading","error","product","state","productDetails","loadingUpdate","errorUpdate","success","successUpdate","productUpdate","userInfo","userLogin","type","push","_id","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","Authorization","token","data","post","err","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport axios from 'axios';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\ninterface Props {}\n\nconst ProductEditScreen: FunctionComponent<Props> = () => {\n  const history = useHistory();\n  const { id: productId } = useParams<any>();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const { loading, error, product } = useSelector((state: any) => state.productDetails);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = useSelector(\n    (state: any) => state.productUpdate\n  );\n  const { userInfo } = useSelector((state: any) => state.userLogin);\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, productId, dispatch, history, successUpdate]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n    dispatch(updateProduct(productId, { name, price, image, brand, category, countInStock, description }));\n  };\n\n  const uploadFileHandler = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = (e.target.files as FileList)[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    setUploading(true);\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo?.token}`,\n        },\n      };\n      const { data } = await axios.post('/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (err) {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e: React.ChangeEvent<any>) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image url\"\n                value={image ? image : '/images/sample.png'}\n                onChange={(e: React.ChangeEvent<any>) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e: React.ChangeEvent<any>) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e: React.ChangeEvent<any>) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e: React.ChangeEvent<any>) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e: React.ChangeEvent<any>) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}