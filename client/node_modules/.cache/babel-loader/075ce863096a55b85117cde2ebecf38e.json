{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Desktop/client/src/screens/UserEditScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails } from '../actions/userActions';\n\nconst UserEditScreen = () => {\n  const {\n    id: userId\n  } = useParams();\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    user\n  } = useSelector(state => state.userDetails);\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [user, userId, dispatch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/userlist\",\n    className: \"btn btn-light my-3\"\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Edit User\"), loading ? /*#__PURE__*/React.createElement(Loader, null) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"name Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"isadmin\"\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Is Admin\",\n    checked: isAdmin,\n    onChange: e => setIsAdmin(e.target.checked)\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\"\n  }, \"Update\"))));\n};\n\nexport default UserEditScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Desktop/client/src/screens/UserEditScreen.tsx"],"names":["React","useEffect","useState","Link","useParams","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","UserEditScreen","id","userId","email","setEmail","isAdmin","setIsAdmin","name","setName","dispatch","loading","error","user","state","userDetails","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails } from '../actions/userActions';\n\ninterface Props {}\n\nconst UserEditScreen: FunctionComponent<Props> = () => {\n  const { id: userId } = useParams<any>();\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [name, setName] = useState('');\n\n  const dispatch = useDispatch();\n\n  const { loading, error, user } = useSelector((state: any) => state.userDetails);\n\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [user, userId, dispatch]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>name Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e: React.ChangeEvent<any>) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e: React.ChangeEvent<any>) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n"]},"metadata":{},"sourceType":"module"}