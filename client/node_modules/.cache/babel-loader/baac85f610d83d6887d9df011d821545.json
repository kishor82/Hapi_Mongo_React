{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productListReducer,productDetailsReducer}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer});var cartItemsFromStore=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')||'{}'):[];var intitialState={cart:{cartItems:cartItemsFromStore}};var middleware=[thunk];var store=createStore(reducer,intitialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStore","localStorage","getItem","JSON","parse","intitialState","cartItems","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA0E,OAA1E,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,kBAAT,CAA6BC,qBAA7B,KAA0D,4BAA1D,CACA,OAASC,WAAT,KAA4B,yBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAGP,eAAe,CAAC,CAC9BQ,WAAW,CAAEJ,kBADiB,CAE9BK,cAAc,CAAEJ,qBAFc,CAG9BK,IAAI,CAAEJ,WAHwB,CAAD,CAA/B,CAMA,GAAMK,CAAAA,kBAAkB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,GAAqC,IAAhD,CAApC,CAA4F,EAAvH,CACA,GAAMG,CAAAA,aAAkB,CAAG,CACzBN,IAAI,CAAE,CACJO,SAAS,CAAEN,kBADP,CADmB,CAA3B,CAMA,GAAMO,CAAAA,UAAwB,CAAG,CAAChB,KAAD,CAAjC,CAEA,GAAMiB,CAAAA,KAAK,CAAGpB,WAAW,CAACQ,OAAD,CAAUS,aAAV,CAAyBb,mBAAmB,CAACF,eAAe,MAAf,QAAmBiB,UAAnB,CAAD,CAA5C,CAAzB,CAEA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n});\n\nconst cartItemsFromStore = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems') || '{}') : [];\nconst intitialState: any = {\n  cart: {\n    cartItems: cartItemsFromStore,\n  },\n};\n\nconst middleware: Middleware[] = [thunk];\n\nconst store = createStore(reducer, intitialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}