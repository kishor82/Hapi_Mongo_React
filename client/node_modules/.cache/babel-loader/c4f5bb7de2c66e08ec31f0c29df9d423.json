{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/OrderListScreen.tsx\";\nimport React, { useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders } from '../actions/orderActions';\n\nconst OrderListScreen = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.orderList);\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Orders\"), loading ? /*#__PURE__*/React.createElement(Loader, null) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"ID\"), /*#__PURE__*/React.createElement(\"th\", null, \"TOTAL PRICE\"), /*#__PURE__*/React.createElement(\"th\", null, \"EMAIL\"), /*#__PURE__*/React.createElement(\"th\", null, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", null))), /*#__PURE__*/React.createElement(\"tbody\", null, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id\n  }, console.log(order), /*#__PURE__*/React.createElement(\"td\", null, order._id), /*#__PURE__*/React.createElement(\"td\", null, order.user.name), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${order.user.email}`\n  }, order.user.email)), /*#__PURE__*/React.createElement(\"td\", null, order.isDelivered ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check\",\n    style: {\n      color: 'green'\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    }\n  })))))));\n};\n\nexport default OrderListScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/OrderListScreen.tsx"],"names":["React","useEffect","Table","useDispatch","useSelector","useHistory","Message","Loader","listOrders","OrderListScreen","dispatch","history","loading","error","orders","state","orderList","userInfo","userLogin","isAdmin","push","map","order","_id","console","log","user","name","email","isDelivered","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAoD,OAApD;AAEA,SAASC,KAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAGA,MAAMC,eAAyC,GAAG,MAAM;AAEtD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA6BV,WAAW,CAAEW,KAAD,IAAgBA,KAAK,CAACC,SAAvB,CAA9C;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeb,WAAW,CAAEW,KAAD,IAAgBA,KAAK,CAACG,SAAvB,CAAhC;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAQ,IAAIA,QAAQ,CAACE,OAAzB,EAAkC;AAChCT,MAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACD,KAFD,MAEO;AACLG,MAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACD;AACF,GANQ,EAMN,CAACV,QAAD,EAAWC,OAAX,EAAoBM,QAApB,CANM,CAAT;AAQA,sBACG,uDACC,yCADD,EAEEL,OAAO,gBACN,oBAAC,MAAD,OADM,GAEJC,KAAK,gBACP,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC;AAAjB,KAA2BA,KAA3B,CADO,gBAGP,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,UAAU,MAAxC;AAAyC,IAAA,SAAS,EAAC;AAAnD,kBACE,gDACE,6CACE,qCADF,eAEE,8CAFF,eAGE,wCAHF,eAIE,4CAJF,eAKE,+BALF,CADF,CADF,eAUE,mCACGC,MAAM,CAACO,GAAP,CAAYC,KAAD,iBACV;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC;AAAf,KACKC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CADL,eAEE,gCAAKA,KAAK,CAACC,GAAX,CAFF,eAGE,gCAAKD,KAAK,CAACI,IAAN,CAAWC,IAAhB,CAHF,eAIE,6CACE;AAAG,IAAA,IAAI,EAAG,UAASL,KAAK,CAACI,IAAN,CAAWE,KAAM;AAApC,KAAwCN,KAAK,CAACI,IAAN,CAAWE,KAAnD,CADF,CAJF,eAOE,gCACGN,KAAK,CAACO,WAAN,gBACC;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAnC,IADD,gBAGC;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT;AAAnC,IAJJ,CAPF,CADD,CADH,CAVF,CAPH,CADH;AAmDD,CApED;;AAsEA,eAAerB,eAAf","sourcesContent":["import React, { useEffect, FunctionComponent } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders } from '../actions/orderActions';\ninterface Props {}\n\nconst OrderListScreen: FunctionComponent<Props> = () => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, error, orders } = useSelector((state: any) => state.orderList);\n\n  const { userInfo } = useSelector((state: any) => state.userLogin);\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  \n  return (\n     <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>TOTAL PRICE</th>\n              <th>EMAIL</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order: any) => (\n              <tr key={order._id}>\n                  {console.log(order)}\n                <td>{order._id}</td>\n                <td>{order.user.name}</td>\n                <td>\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                {/* <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n"]},"metadata":{},"sourceType":"module"}