{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/components/Paginate.tsx\";\nimport React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({\n  pages,\n  page,\n  isAdmin = false,\n  keyword = ''\n}) => {\n  return pages > 1 ? /*#__PURE__*/React.createElement(Pagination, null, [...Array(pages).keys()].map(x => /*#__PURE__*/React.createElement(LinkContainer, {\n    key: x + 1,\n    to: keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`\n  }, /*#__PURE__*/React.createElement(Pagination.Item, {\n    active: x + 1 === page\n  }, x + 1)))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default Paginate;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/components/Paginate.tsx"],"names":["React","Pagination","LinkContainer","Paginate","pages","page","isAdmin","keyword","Array","keys","map","x"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AASA,MAAMC,QAAkC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAO,GAAG,KAAzB;AAAgCC,EAAAA,OAAO,GAAG;AAA1C,CAAD,KAAoD;AAC7F,SAAOH,KAAK,GAAG,CAAR,gBACL,oBAAC,UAAD,QACG,CAAC,GAAGI,KAAK,CAACJ,KAAD,CAAL,CAAaK,IAAb,EAAJ,EAAyBC,GAAzB,CAA8BC,CAAD,iBAC5B,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,CAAC,GAAG,CAAxB;AAA2B,IAAA,EAAE,EAAEJ,OAAO,GAAI,WAAUA,OAAQ,SAAQI,CAAC,GAAG,CAAE,EAApC,GAAyC,SAAQA,CAAC,GAAG,CAAE;AAA7F,kBACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,MAAM,EAAEA,CAAC,GAAG,CAAJ,KAAUN;AAAnC,KAA0CM,CAAC,GAAG,CAA9C,CADF,CADD,CADH,CADK,gBASL,yCATF;AAWD,CAZD;;AAcA,eAAeR,QAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\ninterface Props {\n  pages: number;\n  page: number;\n  isAdmin?: boolean;\n  keyword: string;\n}\n\nconst Paginate: FunctionComponent<Props> = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return pages > 1 ? (\n    <Pagination>\n      {[...Array(pages).keys()].map((x) => (\n        <LinkContainer key={x + 1} to={keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`}>\n          <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n        </LinkContainer>\n      ))}\n    </Pagination>\n  ) : (\n    <></>\n  );\n};\n\nexport default Paginate;\n"]},"metadata":{},"sourceType":"module"}