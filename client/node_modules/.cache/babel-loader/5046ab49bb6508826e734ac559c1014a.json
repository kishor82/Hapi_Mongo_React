{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProductEditScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = () => {\n  const history = useHistory();\n  const {\n    id: productId\n  } = useParams();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    product\n  } = useSelector(state => state.productDetails);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = useSelector(state => state.productUpdate);\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, productId, dispatch, history, successCreate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/productlist\",\n    className: \"btn btn-light my-3\"\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Edit Product\"), loading ? /*#__PURE__*/React.createElement(Loader, null) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"price\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Price\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter price\",\n    value: price,\n    onChange: e => setPrice(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"image\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Image url\",\n    value: image,\n    onChange: e => setImage(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"brand\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Brand\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter brand\",\n    value: brand,\n    onChange: e => setBrand(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"countInStock\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Count In Stock\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter countInStock\",\n    value: countInStock,\n    onChange: e => setCountInStock(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"category\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Category\",\n    value: category,\n    onChange: e => setCategory(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter description\",\n    value: description,\n    onChange: e => setDescription(e.target.value)\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\"\n  }, \"Update\"))));\n};\n\nexport default ProductEditScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProductEditScreen.tsx"],"names":["React","useEffect","useState","Link","useHistory","useParams","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","PRODUCT_UPDATE_RESET","ProductEditScreen","history","id","productId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","dispatch","loading","error","product","state","productDetails","loadingUpdate","errorUpdate","success","successUpdate","productUpdate","type","push","_id","successCreate","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\ninterface Props {}\n\nconst ProductEditScreen: FunctionComponent<Props> = () => {\n  const history = useHistory();\n  const { id: productId } = useParams<any>();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n\n  const dispatch = useDispatch();\n\n  const { loading, error, product } = useSelector((state: any) => state.productDetails);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = useSelector(\n    (state: any) => state.productUpdate\n  );\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, productId, dispatch, history, successCreate]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e: React.ChangeEvent<any>) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image url\"\n                value={image}\n                onChange={(e: React.ChangeEvent<any>) => setImage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e: React.ChangeEvent<any>) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e: React.ChangeEvent<any>) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e: React.ChangeEvent<any>) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e: React.ChangeEvent<any>) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}