{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Desktop/client/src/screens/PlaceOrderScreen.tsx\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\n\nconst addDecimals = num => {\n  return (Math.round(num * 100) / 100).toFixed(2);\n};\n\nconst PlaceOrderScreen = ({\n  history\n}) => {\n  var _cart$shippingAddress, _cart$shippingAddress2, _cart$shippingAddress3, _cart$shippingAddress4;\n\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice));\n  const {\n    order,\n    success,\n    error\n  } = useSelector(state => state.orderCreate);\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    } //eslint-disable-next-line\n\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(createOrder({\n      orderItems: cart.cartItems,\n      shippingAddress: cart.shippingAddress,\n      paymentMethod: cart.paymentMethod,\n      itemsPrice: cart.itemsPrice,\n      shippingPrice: cart.shippingPrice,\n      taxPrice: cart.taxPrice,\n      totalPrice: cart.totalPrice\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    step3: true,\n    step4: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    md: 8\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\"\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Shipping\"), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Address:\"), (_cart$shippingAddress = cart.shippingAddress) === null || _cart$shippingAddress === void 0 ? void 0 : _cart$shippingAddress.address, \",\", (_cart$shippingAddress2 = cart.shippingAddress) === null || _cart$shippingAddress2 === void 0 ? void 0 : _cart$shippingAddress2.city, \" \", (_cart$shippingAddress3 = cart.shippingAddress) === null || _cart$shippingAddress3 === void 0 ? void 0 : _cart$shippingAddress3.postalCode, \",\", ' ', (_cart$shippingAddress4 = cart.shippingAddress) === null || _cart$shippingAddress4 === void 0 ? void 0 : _cart$shippingAddress4.country)), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Payment Method\"), /*#__PURE__*/React.createElement(\"strong\", null, \"Method:\"), cart.paymentMethod), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Order Items\"), /*#__PURE__*/React.createElement(\"strong\", null, \"Method:\"), !cart.cartItems.length ? /*#__PURE__*/React.createElement(Message, null, \"Your cart is empty\") : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\"\n  }, cart.cartItems.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index\n  }, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    md: 1\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true\n  })), /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 4\n  }, item.qty, \" x $\", item.price, \" = $\", item.qty * item.price)))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 4\n  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\"\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Order Summary\")), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Items\"), /*#__PURE__*/React.createElement(Col, null, \"$\", cart.itemsPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Shipping\"), /*#__PURE__*/React.createElement(Col, null, \"$\", cart.shippingPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Tax\"), /*#__PURE__*/React.createElement(Col, null, \"$\", cart.taxPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, null, \"Total\"), /*#__PURE__*/React.createElement(Col, null, \"$\", cart.totalPrice))), error && /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, error)), /*#__PURE__*/React.createElement(ListGroup.Item, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"Button\",\n    className: \"btn-block\",\n    disabled: !cart.cartItems,\n    onClick: placeOrderHandler\n  }, \"Place Order\")))))));\n};\n\nexport default PlaceOrderScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Desktop/client/src/screens/PlaceOrderScreen.tsx"],"names":["React","useEffect","Link","Button","Row","Col","ListGroup","Image","Card","useSelector","useDispatch","Message","CheckoutSteps","createOrder","addDecimals","num","Math","round","toFixed","PlaceOrderScreen","history","cart","state","dispatch","itemsPrice","cartItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","Number","totalPrice","order","success","error","orderCreate","push","_id","placeOrderHandler","orderItems","shippingAddress","paymentMethod","address","city","postalCode","country","length","map","index","image","name","product"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\n\ninterface Props {\n  history: any;\n}\n\nconst addDecimals = (num: number) => {\n  return (Math.round(num * 100) / 100).toFixed(2);\n};\n\nconst PlaceOrderScreen: FunctionComponent<Props> = ({ history }) => {\n  const cart = useSelector((state: any) => state.cart);\n  const dispatch = useDispatch();\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc: any, item: any) => acc + item.price * item.qty, 0));\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice));\n\n  const { order, success, error } = useSelector((state: any) => state.orderCreate);\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    //eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress?.address},{cart.shippingAddress?.city} {cart.shippingAddress?.postalCode},{' '}\n                {cart.shippingAddress?.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method:</strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              <strong>Method:</strong>\n              {!cart.cartItems.length ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item: any, index: number) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image src={item.image} alt={item.name} fluid rounded />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {error && (\n                <ListGroup.Item>\n                  <Message variant=\"danger\">{error}</Message>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Button type=\"Button\" className=\"btn-block\" disabled={!cart.cartItems} onClick={placeOrderHandler}>\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n"]},"metadata":{},"sourceType":"module"}