{"ast":null,"code":"import _slicedToArray from\"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form,Button,Row,Col,Table}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{LinkContainer}from'react-router-bootstrap';import Message from'../components/Message';import Loader from'../components/Loader';import{getUserDetails,updateUserProfile}from'../actions/userActions';import{listMyOrders}from'../actions/orderActions';var ProfileScreen=function ProfileScreen(_ref){var history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.userDetails;}),loading=_useSelector.loading,user=_useSelector.user,detailError=_useSelector.error;var _useSelector2=useSelector(function(state){return state.userLogin;}),userInfo=_useSelector2.userInfo;var _useSelector3=useSelector(function(state){return state.userUpdateProfile;}),success=_useSelector3.success,profileError=_useSelector3.error;var _useSelector4=useSelector(function(state){return state.orderListMy;}),loadingOrders=_useSelector4.loading,orders=_useSelector4.orders,errorOrders=_useSelector4.error;useEffect(function(){dispatch(listMyOrders());// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(function(){if(!userInfo){history.push('/login');}else{if(!(user===null||user===void 0?void 0:user.name)){dispatch(getUserDetails('profile'));}else{setName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage('Passwords do not match');}else{dispatch(updateUserProfile({name:name,email:email,password:password}));}};return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"h2\",null,\"User Profile\"),detailError&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},detailError),profileError&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},profileError),message&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},message),success&&/*#__PURE__*/React.createElement(Message,{variant:\"success\"},\"Profile Updated\"),loading&&/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"name Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"password\"},/*#__PURE__*/React.createElement(Form.Label,null,\"password Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Enter password\",onChange:function onChange(e){return setPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"confirmPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Confirm Password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Update\"))),/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(\"h2\",null,\"My Orders\"),loadingOrders?/*#__PURE__*/React.createElement(Loader,null):errorOrders?/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},errorOrders):/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true,responsive:true,className:\"table-sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"ID\"),/*#__PURE__*/React.createElement(\"th\",null,\"DATE\"),/*#__PURE__*/React.createElement(\"th\",null,\"TOTAL\"),/*#__PURE__*/React.createElement(\"th\",null,\"PAID\"),/*#__PURE__*/React.createElement(\"th\",null,\"DELIVERED\"),/*#__PURE__*/React.createElement(\"th\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,orders.map(function(order){return/*#__PURE__*/React.createElement(\"tr\",{key:order._id},/*#__PURE__*/React.createElement(\"td\",null,order._id),/*#__PURE__*/React.createElement(\"td\",null,order.createdAt.substring(0,10)),/*#__PURE__*/React.createElement(\"td\",null,order.totalPrice),/*#__PURE__*/React.createElement(\"td\",null,order.isPaid?order.paidAt.substring(0,10):/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-times\",style:{color:'red'}})),/*#__PURE__*/React.createElement(\"td\",null,order.isDelivered?order.deliveredAt.substring(0,10):/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-times\",style:{color:'red'}})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(LinkContainer,{to:\"/order/\".concat(order._id)},/*#__PURE__*/React.createElement(Button,{className:\"btn-sm\",variant:\"light\"},\"Details\"))));})))));};export default ProfileScreen;","map":null,"metadata":{},"sourceType":"module"}