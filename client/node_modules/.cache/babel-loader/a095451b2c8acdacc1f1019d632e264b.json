{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/v1/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/v1/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/actions/orderActions.ts"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","err","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"mappings":"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","sourcesContent":["import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order: any) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/v1/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id: string) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/v1/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId: string, paymentResult: any) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/v1/orders/${orderId}/pay`, paymentResult, config);\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/v1/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}