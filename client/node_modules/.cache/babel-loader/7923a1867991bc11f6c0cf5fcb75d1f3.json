{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProfileScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nconst ProfileScreen = ({\n  history\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(undefined);\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(undefined);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    user,\n    error: detailError\n  } = useSelector(state => state.userDetails);\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n  const {\n    success,\n    error: profileError\n  } = useSelector(state => state.userUpdateProfile);\n  const {\n    loading: loadingOrders,\n    orders,\n    error: errorOrders\n  } = useSelector(state => state.orderListMy);\n  useEffect(() => {\n    dispatch(listMyOrders()); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!(user === null || user === void 0 ? void 0 : user.name)) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    md: 3\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"User Profile\"), detailError && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, detailError), profileError && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, profileError), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, message), success && /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\"\n  }, \"Profile Updated\"), loading && /*#__PURE__*/React.createElement(Loader, null), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"name Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"password Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    onChange: e => setPassword(e.target.value)\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\"\n  }, /*#__PURE__*/React.createElement(Form.Label, null, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    onChange: e => setConfirmPassword(e.target.value)\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\"\n  }, \"Update\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 9\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"My Orders\"), loadingOrders ? /*#__PURE__*/React.createElement(Loader, null) : errorOrders ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\"\n  }, errorOrders) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"ID\"), /*#__PURE__*/React.createElement(\"th\", null, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", null, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", null, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", null, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", null))), /*#__PURE__*/React.createElement(\"tbody\", null, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id\n  }, /*#__PURE__*/React.createElement(\"td\", null, order._id), /*#__PURE__*/React.createElement(\"td\", null, order.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", null, order.totalPrice), /*#__PURE__*/React.createElement(\"td\", null, order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", null, order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/order/${order._id}`\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-sm\",\n    variant: \"light\"\n  }, \"Details\")))))))));\n};\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProfileScreen.tsx"],"names":["React","useEffect","useState","Form","Button","Row","Col","Table","useDispatch","useSelector","LinkContainer","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","ProfileScreen","history","email","setEmail","password","setPassword","undefined","name","setName","confirmPassword","setConfirmPassword","message","setMessage","dispatch","loading","user","error","detailError","state","userDetails","userInfo","userLogin","success","profileError","userUpdateProfile","loadingOrders","orders","errorOrders","orderListMy","push","submitHandler","e","preventDefault","target","value","map","order","_id","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\ninterface Props {\n  history: any;\n}\n\nconst ProfileScreen: FunctionComponent<Props> = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(undefined);\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(undefined);\n  const [message, setMessage] = useState<any>(null);\n\n  const dispatch = useDispatch();\n\n  const { loading, user, error: detailError } = useSelector((state: any) => state.userDetails);\n  const { userInfo } = useSelector((state: any) => state.userLogin);\n  const { success, error: profileError } = useSelector((state: any) => state.userUpdateProfile);\n  const { loading: loadingOrders, orders, error: errorOrders } = useSelector((state: any) => state.orderListMy);\n\n  useEffect(() => {\n    dispatch(listMyOrders());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user?.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({ name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {detailError && <Message variant=\"danger\">{detailError}</Message>}\n        {profileError && <Message variant=\"danger\">{profileError}</Message>}\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>name Address</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<any>) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>password Address</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              onChange={(e: React.ChangeEvent<any>) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={(e: React.ChangeEvent<any>) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order: any) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }} />\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }} />\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}