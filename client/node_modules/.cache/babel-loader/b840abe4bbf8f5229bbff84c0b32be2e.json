{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_RESET } from '../constants/userConstants';\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data.data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data.data));\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/register', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data.data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data.data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data.data));\n  } catch (err) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/v1/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/v1/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/v1/users`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/actions/userActions.ts"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_RESET","axios","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","err","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL"],"mappings":"AAAA,SACEA,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,eAJF,EAKEC,kBALF,EAMEC,kBANF,EAOEC,WAPF,EAQEC,kBARF,EASEC,qBATF,EAUEC,qBAVF,EAWEC,wBAXF,EAYEC,2BAZF,EAaEC,2BAbF,EAcEC,kBAdF,EAeEC,cAfF,EAgBEC,iBAhBF,EAiBEC,iBAjBF,EAkBEC,eAlBF,QAmBO,4BAnBP;AAoBA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,6BAApC;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAqC,MAAOC,QAAP,IAAyB;AACjF,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEpB;AADC,KAAD,CAAR;AAIA,UAAMqB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,IAAN,CAAW,eAAX,EAA4B;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA5B,EAAiDG,MAAjD,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEnB,kBADC;AAEPwB,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACA,IAApB,CAAjC;AACD,GAnBD,CAmBE,OAAOO,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAErB,eADC;AAEP0B,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAA9D,GAAwEF,GAAG,CAACE;AAF9E,KAAD,CAAR;AAID;AACF,CA1BM;AA4BP,OAAO,MAAMC,MAAM,GAAG,MAAOd,QAAD,IAAmB;AAC7CO,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAf,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAElB;AAAR,GAAD,CAAR;AACAiB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACAU,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAI,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMsB,QAAQ,GAAG,CAACC,IAAD,EAAenB,KAAf,EAA8BC,QAA9B,KAAmD,MAAOC,QAAP,IAAyB;AAClG,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGA,UAAMiB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,IAAN,CAAW,kBAAX,EAA+B;AAAEY,MAAAA,IAAF;AAAQnB,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA/B,EAA0DG,MAA1D,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,qBADC;AAEPoB,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAKAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEnB,kBADC;AAEPwB,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACA,IAApB,CAAjC;AACD,GAtBD,CAsBE,OAAOO,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEjB,kBADC;AAEPsB,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAA9D,GAAwEF,GAAG,CAACE;AAF9E,KAAD,CAAR;AAID;AACF,CA7BM;AA+BP,OAAO,MAAMK,cAAc,GAAIC,EAAD,IAAa,OAAOnB,QAAP,EAAsBoB,QAAtB,KAAwC;AACjF,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEvB;AADC,KAAD,CAAR;AAIA,UAAM;AACJ2C,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMlB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPoB,QAAAA,aAAa,EAAG,UAASD,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEE,KAAM;AAFlC;AADI,KAAf;AAOA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAAC8B,GAAN,CAAW,iBAAgBN,EAAG,EAA9B,EAAiCjB,MAAjC,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEtB,oBADC;AAEP2B,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOO,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAExB,iBADC;AAEP6B,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAA9D,GAAwEF,GAAG,CAACE;AAF9E,KAAD,CAAR;AAID;AACF,CA7BM;AA+BP,OAAO,MAAMa,iBAAiB,GAAIC,IAAD,IAAe,OAAO3B,QAAP,EAAsBoB,QAAtB,KAAwC;AACtF,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAIA,UAAM;AACJiC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMlB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPoB,QAAAA,aAAa,EAAG,UAASD,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEE,KAAM;AAFlC;AADI,KAAf;AAOA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACiC,GAAN,CAAW,uBAAX,EAAmCD,IAAnC,EAAyCzB,MAAzC,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,2BADC;AAEPiB,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOO,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,wBADC;AAEPmB,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAA9D,GAAwEF,GAAG,CAACE;AAF9E,KAAD,CAAR;AAID;AACF,CA7BM;AA+BP,OAAO,MAAMgB,SAAS,GAAG,MAAM,OAAO7B,QAAP,EAAsBoB,QAAtB,KAAwC;AACrE,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAIA,UAAM;AACJ6B,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMlB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPoB,QAAAA,aAAa,EAAG,UAASD,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEE,KAAM;AADlC;AADI,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAAC8B,GAAN,CAAW,eAAX,EAA2BvB,MAA3B,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,iBADC;AAEPa,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOO,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,cADC;AAEPe,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAA9D,GAAwEF,GAAG,CAACE;AAF9E,KAAD,CAAR;AAID;AACF,CA5BM;AA8BP,OAAO,MAAMiB,UAAU,GAAIX,EAAD,IAAgB,OAAOnB,QAAP,EAAsBoB,QAAtB,KAAwC;AAChF,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE8B;AADC,KAAD,CAAR;AAIA,UAAM;AACJV,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMlB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPoB,QAAAA,aAAa,EAAG,UAASD,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEE,KAAM;AADlC;AADI,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAAC8B,GAAN,CAAW,eAAX,EAA2BvB,MAA3B,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE+B,mBADC;AAEP1B,MAAAA,OAAO,EAAEF,IAAI,CAACA;AAFP,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOO,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEgC,gBADC;AAEP3B,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,OAA9D,GAAwEF,GAAG,CAACE;AAF9E,KAAD,CAAR;AAID;AACF,CA5BM","sourcesContent":["import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_RESET,\n} from '../constants/userConstants';\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nexport const login = (email: string, password: string) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post('/api/v1/login', { email, password }, config);\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data.data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data.data));\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch: any) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name: string, email: string, password: string) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post('/api/v1/register', { name, email, password }, config);\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data.data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data.data,\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data.data));\n  } catch (err) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id: any) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/v1/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user: any) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/v1/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/v1/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n\nexport const deleteUser = (id: string) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo?.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/v1/users`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}