{"ast":null,"code":"import _slicedToArray from\"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Form,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import{getUserDetails,updateUserProfile}from'../actions/userActions';var ProfileScreen=function ProfileScreen(_ref){var history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),name=_useState6[0],setName=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.userDetails;}),loading=_useSelector.loading,user=_useSelector.user,detailError=_useSelector.error;var _useSelector2=useSelector(function(state){return state.userLogin;}),userInfo=_useSelector2.userInfo;var _useSelector3=useSelector(function(state){return state.userUpdateProfile;}),success=_useSelector3.success,profileError=_useSelector3.error;useEffect(function(){if(!userInfo){history.push('/login');}else{if(!(user===null||user===void 0?void 0:user.name)){dispatch(getUserDetails('profile'));}else{setName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage('Passwords do not match');}else{dispatch(updateUserProfile({name:name,email:email,password:password}));}};return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"h2\",null,\"User Profile\"),detailError&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},detailError),profileError&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},profileError),message&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},message),success&&/*#__PURE__*/React.createElement(Message,{variant:\"success\"},\"Profile Updated\"),loading&&/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"name Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"password\"},/*#__PURE__*/React.createElement(Form.Label,null,\"password Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Enter password\",onChange:function onChange(e){return setPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"confirmPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Confirm Password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Update\"))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"h2\",null,\"My Orders\")));};export default ProfileScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProfileScreen.tsx"],"names":["React","useEffect","useState","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","ProfileScreen","history","email","setEmail","undefined","password","setPassword","name","setName","confirmPassword","setConfirmPassword","message","setMessage","dispatch","state","userDetails","loading","user","detailError","error","userLogin","userInfo","userUpdateProfile","success","profileError","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n\ninterface Props {\n  history: any;\n}\n\nconst ProfileScreen: FunctionComponent<Props> = ({  history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(undefined);\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(undefined);\n  const [message, setMessage] = useState<any>(null);\n\n  const dispatch = useDispatch();\n\n  const { loading, user, error: detailError } = useSelector((state: any) => state.userDetails);\n  const { userInfo } = useSelector((state: any) => state.userLogin);\n  const { success, error: profileError } = useSelector((state: any) => state.userUpdateProfile);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user?.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({ name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={6}>\n        <h2>User Profile</h2>\n        {detailError && <Message variant=\"danger\">{detailError}</Message>}\n        {profileError && <Message variant=\"danger\">{profileError}</Message>}\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>name Address</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<any>) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>password Address</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              onChange={(e: React.ChangeEvent<any>) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={(e: React.ChangeEvent<any>) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={6}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}