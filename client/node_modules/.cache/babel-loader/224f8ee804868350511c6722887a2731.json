{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProfileScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    user\n  } = useSelector(state => state.userDetails);\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n  const {\n    success,\n    error\n  } = useSelector(state => state.userUpdateProfile);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"User Profile\"), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, error), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, message), success && /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, success), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"name Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"password Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"My Orders\")));\n};\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/home/ad.rapidops.com/kishor.rathva/Worspace/hapi-mongo-ts/client/src/screens/ProfileScreen.tsx"],"names":["React","useEffect","useState","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","ProfileScreen","location","history","email","setEmail","password","setPassword","name","setName","confirmPassword","setConfirmPassword","message","setMessage","dispatch","loading","user","state","userDetails","userInfo","userLogin","success","error","userUpdateProfile","push","submitHandler","e","preventDefault","id","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FunctionComponent } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n\ninterface Props {\n  location: any;\n  history: any;\n}\n\nconst ProfileScreen: FunctionComponent<Props> = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState<any>(null);\n\n  const dispatch = useDispatch();\n\n  const { loading, user } = useSelector((state: any) => state.userDetails);\n  const { userInfo } = useSelector((state: any) => state.userLogin);\n  const { success ,error } = useSelector((state: any) => state.userUpdateProfile);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = (e: React.FormEvent<any>) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {success && <Message variant=\"success\">{success}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>name Address</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e: React.ChangeEvent<any>) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<any>) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>password Address</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              onChange={(e: React.ChangeEvent<any>) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={(e: React.ChangeEvent<any>) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}